<div class="map" style="float:left;">
    <div class="map-title">Map of the Universe</div>
    <div class="map-title">@((String.Concat(Enumerable.Repeat("*", GameConfig.X_dimension * 3 - 2))))</div>
    <div class="map-sectors">
        <div class="map-x-axis" style="clear: both;">
            <div class="map-sector">&nbsp;</div>
            @for (int x = 0; x <= map.X_Dimension; x++)
            {
                <div class="map-sector map-axis map-x-axis">@((char)(x + 65))</div>
            }
        </div>

        @for (int y = 0; y <= map.Y_Dimension; y++)
        {
            <div style="clear: both;">
                <div class="map-sector map-axis map-y-axis" style="float: left; clear: none">@(y + 1)</div>
                @for (int x = 0; x <= map.X_Dimension; x++)
                {
                    <div class="map-sector @(SectorClass(map[x, y])) @((GameStateObj.LastMove != null) && (GameStateObj.LastMove.X == x) && (GameStateObj.LastMove.Y == y) ? "map-last-move" : "")">@(map[x, y])</div>
                }
            </div>
        }
    </div>

</div>

@code {
    [Parameter]
    public GameConfiguration GameConfig { get; set; }

    [Parameter]
    public StarLanes.Pages.StarLanesGame.GameStateObject GameStateObj { get; set; }

    [Parameter]
    public Map map { get; set; }

    // conditional CSS classes for sector based on their map value
    private string SectorClass(string sectorValue)
    {
        switch (sectorValue)
        {
            case Map.ConsumedSector:
                return "map-sector-consumed";
            case Map.EmptySector:
                return "map-sector-empty";
            case Map.DevelopedSector:
                return "map-sector-developed";
            case Map.StarSector:
                return "map-sector-star";
            case Map.BlackholeSector:
                return "map-sector-blackhole";
            case "1":
            case "2":
            case "3":
            case "4":
            case "5":
            case "6":
            case "7":
            case "8":
                return "map-sector-move";
        }

        if ("ABCDEFGHIJKL".Contains(sectorValue)) return "map-sector-company";

        return String.Empty;
    }

}
